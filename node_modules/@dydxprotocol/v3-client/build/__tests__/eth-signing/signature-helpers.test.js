"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const helpers_1 = require("../../src/eth-signing/helpers");
const ONBOARDING_SIGNATURE_RS = ('0x429e616f0d1f73dedbb8ab1d975dca6737b7d2b800ce144c4d1176208288d6cf03' +
    '3b5c589fe04c2ec02fefb6d5af44648d74efa3b25da8708e2d33e648a34837');
const ONBOARDING_SIGNATURE = `${ONBOARDING_SIGNATURE_RS}1c00`;
const ONBOARDING_SIGNATURE_ROTATED_V = `${ONBOARDING_SIGNATURE_RS}0100`;
const ONBOARDING_SIGNATURE_ROTATED_T = `${ONBOARDING_SIGNATURE_RS}1c03`;
const ONBOARDING_SIGNATURE_BOTH_ROTATED = `${ONBOARDING_SIGNATURE_RS}0103`;
describe('Signature Formatting', () => {
    describe('getAllSignatureRotations', () => {
        it('rotates a valid signature', () => {
            expect((0, helpers_1.getAllSignatureRotations)(ONBOARDING_SIGNATURE)).toEqual([
                ONBOARDING_SIGNATURE,
                ONBOARDING_SIGNATURE_ROTATED_V,
                ONBOARDING_SIGNATURE_ROTATED_T,
                ONBOARDING_SIGNATURE_BOTH_ROTATED,
            ]);
        });
        it('does not rotate v when invalid', () => {
            expect((0, helpers_1.getAllSignatureRotations)(`${ONBOARDING_SIGNATURE_RS}1d00`)).toEqual([
                `${ONBOARDING_SIGNATURE_RS}1d00`,
                `${ONBOARDING_SIGNATURE_RS}1d00`,
                `${ONBOARDING_SIGNATURE_RS}1d03`,
                `${ONBOARDING_SIGNATURE_RS}1d03`,
            ]);
        });
        it('does not rotate t when invalid', () => {
            expect((0, helpers_1.getAllSignatureRotations)(`${ONBOARDING_SIGNATURE_RS}1c02`)).toEqual([
                `${ONBOARDING_SIGNATURE_RS}1c02`,
                `${ONBOARDING_SIGNATURE_RS}0102`,
                `${ONBOARDING_SIGNATURE_RS}1c02`,
                `${ONBOARDING_SIGNATURE_RS}0102`,
            ]);
        });
        it('throws on invalid signature', () => {
            expect(() => (0, helpers_1.getAllSignatureRotations)(ONBOARDING_SIGNATURE_RS)).toThrow(`Invalid signature: ${ONBOARDING_SIGNATURE_RS}`);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbmF0dXJlLWhlbHBlcnMudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL19fdGVzdHNfXy9ldGgtc2lnbmluZy9zaWduYXR1cmUtaGVscGVycy50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkRBQXlFO0FBRXpFLE1BQU0sdUJBQXVCLEdBQUcsQ0FDOUIsc0VBQXNFO0lBQ3RFLGdFQUFnRSxDQUNqRSxDQUFDO0FBQ0YsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLHVCQUF1QixNQUFNLENBQUM7QUFDOUQsTUFBTSw4QkFBOEIsR0FBRyxHQUFHLHVCQUF1QixNQUFNLENBQUM7QUFDeEUsTUFBTSw4QkFBOEIsR0FBRyxHQUFHLHVCQUF1QixNQUFNLENBQUM7QUFDeEUsTUFBTSxpQ0FBaUMsR0FBRyxHQUFHLHVCQUF1QixNQUFNLENBQUM7QUFFM0UsUUFBUSxDQUFDLHNCQUFzQixFQUFFLEdBQUcsRUFBRTtJQUNwQyxRQUFRLENBQUMsMEJBQTBCLEVBQUUsR0FBRyxFQUFFO1FBQ3hDLEVBQUUsQ0FBQywyQkFBMkIsRUFBRSxHQUFHLEVBQUU7WUFDbkMsTUFBTSxDQUFDLElBQUEsa0NBQXdCLEVBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztnQkFDN0Qsb0JBQW9CO2dCQUNwQiw4QkFBOEI7Z0JBQzlCLDhCQUE4QjtnQkFDOUIsaUNBQWlDO2FBQ2xDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0gsRUFBRSxDQUFDLGdDQUFnQyxFQUFFLEdBQUcsRUFBRTtZQUN4QyxNQUFNLENBQUMsSUFBQSxrQ0FBd0IsRUFBQyxHQUFHLHVCQUF1QixNQUFNLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztnQkFDekUsR0FBRyx1QkFBdUIsTUFBTTtnQkFDaEMsR0FBRyx1QkFBdUIsTUFBTTtnQkFDaEMsR0FBRyx1QkFBdUIsTUFBTTtnQkFDaEMsR0FBRyx1QkFBdUIsTUFBTTthQUNqQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxHQUFHLEVBQUU7WUFDeEMsTUFBTSxDQUFDLElBQUEsa0NBQXdCLEVBQUMsR0FBRyx1QkFBdUIsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7Z0JBQ3pFLEdBQUcsdUJBQXVCLE1BQU07Z0JBQ2hDLEdBQUcsdUJBQXVCLE1BQU07Z0JBQ2hDLEdBQUcsdUJBQXVCLE1BQU07Z0JBQ2hDLEdBQUcsdUJBQXVCLE1BQU07YUFDakMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMsNkJBQTZCLEVBQUUsR0FBRyxFQUFFO1lBQ3JDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFBLGtDQUF3QixFQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsc0JBQXNCLHVCQUF1QixFQUFFLENBQUMsQ0FBQztRQUMzSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMifQ==