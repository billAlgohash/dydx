"use strict";
/**
 * Unit tests for util.ts.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const expect_1 = __importDefault(require("expect"));
// Module under test.
const util_1 = require("../src/lib/util");
const HEX_32_BYTES_LOWER_NO_PREFIX_RE = /^[0-9a-f]{64}$/;
describe('util', () => {
    describe('factToCondition()', () => {
        it('succeeds', () => {
            (0, expect_1.default)((0, util_1.factToCondition)('0xe4a295420b58a4a7aa5c98920d6e8a0ef875b17a', '0xcf9492ae0554c642b57f5d9cabee36fb512dd6b6629bdc51e60efb3118b8c2d8')).toEqual('4d794792504b063843afdf759534f5ed510a3ca52e7baba2e999e02349dd24');
        });
    });
    describe('normalizeHex32()', () => {
        it('returns a 64-character hex string without 0x prefix', () => {
            (0, expect_1.default)((0, util_1.normalizeHex32)('0x00').match(HEX_32_BYTES_LOWER_NO_PREFIX_RE)).not.toBeFalsy();
        });
        it('pads a string to 32 bytes', () => {
            (0, expect_1.default)((0, util_1.normalizeHex32)('00')).toEqual(`${'0'.repeat(64)}`);
        });
        it('throws if the hex string is longer than 32 bytes', () => {
            (0, expect_1.default)(() => (0, util_1.normalizeHex32)(`0x${'0'.repeat(65)}`)).toThrow('Input does not fit in 32 bytes');
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vX190ZXN0c19fL3V0aWwudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7Ozs7O0FBRUgsb0RBQTRCO0FBRTVCLHFCQUFxQjtBQUNyQiwwQ0FHeUI7QUFFekIsTUFBTSwrQkFBK0IsR0FBRyxnQkFBZ0IsQ0FBQztBQUV6RCxRQUFRLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRTtJQUVwQixRQUFRLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxFQUFFO1FBRWpDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFO1lBQ2xCLElBQUEsZ0JBQU0sRUFBQyxJQUFBLHNCQUFlLEVBQ3BCLDRDQUE0QyxFQUM1QyxvRUFBb0UsQ0FDckUsQ0FBQyxDQUFDLE9BQU8sQ0FDUixnRUFBZ0UsQ0FDakUsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxFQUFFO1FBRWhDLEVBQUUsQ0FBQyxxREFBcUQsRUFBRSxHQUFHLEVBQUU7WUFDN0QsSUFBQSxnQkFBTSxFQUFDLElBQUEscUJBQWMsRUFBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsK0JBQStCLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN4RixDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQywyQkFBMkIsRUFBRSxHQUFHLEVBQUU7WUFDbkMsSUFBQSxnQkFBTSxFQUFDLElBQUEscUJBQWMsRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzVELENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLGtEQUFrRCxFQUFFLEdBQUcsRUFBRTtZQUMxRCxJQUFBLGdCQUFNLEVBQ0osR0FBRyxFQUFFLENBQUMsSUFBQSxxQkFBYyxFQUFDLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQzVDLENBQUMsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFDOUMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIn0=