import { DydxAsset, DydxMarket, NetworkId, SyntheticAsset } from './types';
export declare const ALL_ASSETS: DydxAsset[];
export declare const COLLATERAL_ASSET = DydxAsset.USDC;
export declare const SYNTHETIC_ASSETS: SyntheticAsset[];
/**
 * Mapping from a dYdX market to the synthetic asset for that market.
 */
export declare const SYNTHETIC_ASSET_MAP: Record<DydxMarket, SyntheticAsset>;
/**
 * The resolution represents the number of decimals of precision used in the Starkware system.
 *
 * For example, a resolution of 9 for ETH means that 1e-9 ETH = 1 Gwei is the smallest unit.
 */
export declare const ASSET_RESOLUTION: Record<DydxAsset, number>;
export declare const COLLATERAL_ASSET_ADDRESS_BY_NETWORK: Record<NetworkId, string>;
export declare const COLLATERAL_ASSET_ID_BY_NETWORK_ID: Record<NetworkId, string>;
/**
 * Mapping from a synthetic asset to its asset ID.
 */
export declare const SYNTHETIC_ASSET_ID_MAP: Record<SyntheticAsset, string>;
/**
 * The smallest unit of the asset in the Starkware system, represented in canonical (human) units.
 */
export declare const ASSET_QUANTUM_SIZE: Record<DydxAsset, string>;
