"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FactRegistry = void 0;
const web3_1 = __importDefault(require("web3"));
const Constants_1 = require("../lib/Constants");
const ContractCallHelpers_1 = require("../lib/ContractCallHelpers");
class FactRegistry {
    constructor(contracts) {
        this.contracts = contracts;
    }
    getAddress() {
        return this.contracts.factRegistry.options.address;
    }
    getTransferEthFact({ recipient, humanAmount, salt, }) {
        return this.getTransferErc20Fact({
            tokenAddress: Constants_1.ZERO_ADDRESS,
            tokenDecimals: 18,
            recipient,
            humanAmount,
            salt,
        });
    }
    getTransferErc20Fact({ recipient, tokenAddress, tokenDecimals, humanAmount, salt, }) {
        const result = web3_1.default.utils.soliditySha3({ type: 'address', value: recipient }, { type: 'uint256', value: (0, ContractCallHelpers_1.humanTokenAmountToUint256)(humanAmount, tokenDecimals) }, { type: 'address', value: tokenAddress }, { type: 'uint256', value: (0, ContractCallHelpers_1.bignumberableToUint256)(salt) });
        return result;
    }
    async transferEth({ recipient, humanAmount, salt, }, options) {
        return this.contracts.send(this.contracts.factRegistry, this.contracts.factRegistry.methods.transfer(recipient, (0, ContractCallHelpers_1.bignumberableToUint256)(salt)), {
            ...options,
            value: (0, ContractCallHelpers_1.humanEthAmountToUint256)(humanAmount),
        });
    }
    async transferERC20({ recipient, tokenAddress, tokenDecimals, humanAmount, salt, }, options) {
        return this.contracts.send(this.contracts.factRegistry, this.contracts.factRegistry.methods.transferERC20(recipient, tokenAddress, (0, ContractCallHelpers_1.humanTokenAmountToUint256)(humanAmount, tokenDecimals), (0, ContractCallHelpers_1.bignumberableToUint256)(salt)), options);
    }
    async transferCollateralToken({ recipient, humanAmount, salt, }, options) {
        return this.contracts.send(this.contracts.factRegistry, this.contracts.factRegistry.methods.transferERC20(recipient, this.contracts.collateralToken.options.address, (0, ContractCallHelpers_1.humanCollateralAmountToUint256)(humanAmount), (0, ContractCallHelpers_1.bignumberableToUint256)(salt)), options);
    }
    // ============ Getters ============
    async indentify(options) {
        const result = await this.contracts.call(this.contracts.factRegistry.methods.indentify(), options);
        return result;
    }
    async hasRegisteredFact(options) {
        const result = await this.contracts.call(this.contracts.factRegistry.methods.hasRegisteredFact(), options);
        return result;
    }
    async isValid({ fact, }, options) {
        const result = await this.contracts.call(this.contracts.factRegistry.methods.isValid(fact), options);
        return result;
    }
}
exports.FactRegistry = FactRegistry;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmFjdFJlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZHVsZXMvRmFjdFJlZ2lzdHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdEQUF3QjtBQUV4QixnREFBZ0Q7QUFDaEQsb0VBS29DO0FBVXBDLE1BQWEsWUFBWTtJQUd2QixZQUNFLFNBQW9CO1FBRXBCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFFTSxVQUFVO1FBQ2YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ3JELENBQUM7SUFFTSxrQkFBa0IsQ0FDdkIsRUFDRSxTQUFTLEVBQ1QsV0FBVyxFQUNYLElBQUksR0FLTDtRQUVELE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDO1lBQy9CLFlBQVksRUFBRSx3QkFBWTtZQUMxQixhQUFhLEVBQUUsRUFBRTtZQUNqQixTQUFTO1lBQ1QsV0FBVztZQUNYLElBQUk7U0FDTCxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sb0JBQW9CLENBQ3pCLEVBQ0UsU0FBUyxFQUNULFlBQVksRUFDWixhQUFhLEVBQ2IsV0FBVyxFQUNYLElBQUksR0FPTDtRQUVELE1BQU0sTUFBTSxHQUFrQixjQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FDbkQsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsRUFDckMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFBLCtDQUF5QixFQUFDLFdBQVcsRUFBRSxhQUFhLENBQUMsRUFBRSxFQUNqRixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxFQUN4QyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUEsNENBQXNCLEVBQUMsSUFBSSxDQUFDLEVBQUUsQ0FDekQs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