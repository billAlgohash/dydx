import { Contracts } from '../lib/Contracts';
import { Address, BigNumberable, CallOptions, SendOptions, TxResult } from '../types';
export declare class FactRegistry {
    protected contracts: Contracts;
    constructor(contracts: Contracts);
    getAddress(): string;
    getTransferEthFact({ recipient, humanAmount, salt, }: {
        recipient: Address;
        humanAmount: BigNumberable;
        salt: string;
    }): string;
    getTransferErc20Fact({ recipient, tokenAddress, tokenDecimals, humanAmount, salt, }: {
        recipient: Address;
        tokenAddress: Address;
        tokenDecimals: number;
        humanAmount: BigNumberable;
        salt: string;
    }): string;
    transferEth({ recipient, humanAmount, salt, }: {
        recipient: Address;
        humanAmount: BigNumberable;
        salt: BigNumberable;
    }, options?: SendOptions): Promise<TxResult>;
    transferERC20({ recipient, tokenAddress, tokenDecimals, humanAmount, salt, }: {
        recipient: Address;
        tokenAddress: Address;
        tokenDecimals: number;
        humanAmount: BigNumberable;
        salt: string;
    }, options?: SendOptions): Promise<TxResult>;
    transferCollateralToken({ recipient, humanAmount, salt, }: {
        recipient: Address;
        humanAmount: BigNumberable;
        salt: string;
    }, options?: SendOptions): Promise<TxResult>;
    indentify(options?: CallOptions): Promise<string>;
    hasRegisteredFact(options?: CallOptions): Promise<boolean>;
    isValid({ fact, }: {
        fact: string;
    }, options?: CallOptions): Promise<boolean>;
}
