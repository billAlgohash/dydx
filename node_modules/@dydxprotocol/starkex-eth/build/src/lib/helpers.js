"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeResponse = exports.sendGaslessTransaction = exports.getUsdcAddress = exports.OUTCOMES = void 0;
const Constants_1 = require("./Constants");
var OUTCOMES;
(function (OUTCOMES) {
    OUTCOMES[OUTCOMES["INITIAL"] = 0] = "INITIAL";
    OUTCOMES[OUTCOMES["RESOLVED"] = 1] = "RESOLVED";
    OUTCOMES[OUTCOMES["REJECTED"] = 2] = "REJECTED";
})(OUTCOMES = exports.OUTCOMES || (exports.OUTCOMES = {}));
function getUsdcAddress(networkId) {
    const buyTokenAddress = Constants_1.USDC_ADDRESSES[networkId];
    if (buyTokenAddress === undefined) {
        throw new Error(`No buyTokenAddress with networkId: ${networkId}`);
    }
    return buyTokenAddress;
}
exports.getUsdcAddress = getUsdcAddress;
async function sendGaslessTransaction(contractCall) {
    let hashOutcome = OUTCOMES.INITIAL;
    const transactionHash = await new Promise((resolve, reject) => {
        contractCall.on('error', (error) => {
            // has not reached a transactionHash or error yet
            if (hashOutcome === OUTCOMES.INITIAL) {
                hashOutcome = OUTCOMES.REJECTED;
                reject(error);
                contractCall.off();
            }
        });
        contractCall.on('transactionHash', (txHash) => {
            // has not reached a transactionHash or error yet
            if (hashOutcome === OUTCOMES.INITIAL) {
                hashOutcome = OUTCOMES.RESOLVED;
                resolve(txHash);
                contractCall.off();
            }
        });
    });
    return normalizeResponse({ transactionHash });
}
exports.sendGaslessTransaction = sendGaslessTransaction;
function normalizeResponse(txResult) {
    const txHash = txResult.transactionHash;
    if (txHash) {
        const { transactionHash: internalHash, nonce: internalNonce, } = txHash;
        if (internalHash) {
            txResult.transactionHash = internalHash;
        }
        if (internalNonce) {
            txResult.nonce = internalNonce;
        }
    }
    return txResult;
}
exports.normalizeResponse = normalizeResponse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFPQSwyQ0FBNkM7QUFFN0MsSUFBWSxRQUlYO0FBSkQsV0FBWSxRQUFRO0lBQ2xCLDZDQUFXLENBQUE7SUFDWCwrQ0FBWSxDQUFBO0lBQ1osK0NBQVksQ0FBQTtBQUNkLENBQUMsRUFKVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQUluQjtBQUVELFNBQWdCLGNBQWMsQ0FBQyxTQUFpQjtJQUM5QyxNQUFNLGVBQWUsR0FBdUIsMEJBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN0RSxJQUFJLGVBQWUsS0FBSyxTQUFTLEVBQUU7UUFDakMsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQ0FBc0MsU0FBUyxFQUFFLENBQUMsQ0FBQztLQUNwRTtJQUVELE9BQU8sZUFBZSxDQUFDO0FBQ3pCLENBQUM7QUFQRCx3Q0FPQztBQUVNLEtBQUssVUFBVSxzQkFBc0IsQ0FBQyxZQUFrQztJQUM3RSxJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDO0lBRW5DLE1BQU0sZUFBZSxHQUFHLE1BQU0sSUFBSSxPQUFPLENBQ3ZDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1FBQ2xCLFlBQVksQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsS0FBWSxFQUFFLEVBQUU7WUFDeEMsaURBQWlEO1lBQ2pELElBQUksV0FBVyxLQUFLLFFBQVEsQ0FBQyxPQUFPLEVBQUU7Z0JBQ3BDLFdBQVcsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDO2dCQUNoQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ2IsWUFBb0IsQ0FBQyxHQUFHLEVBQUUsQ0FBQzthQUM3QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsWUFBWSxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLE1BQWMsRUFBRSxFQUFFO1lBQ3BELGlEQUFpRDtZQUNqRCxJQUFJLFdBQVcsS0FBSyxRQUFRLENBQUMsT0FBTyxFQUFFO2dCQUNwQyxXQUFXLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQztnQkFDaEMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNmLFlBQW9CLENBQUMsR0FBRyxFQUFFLENBQUM7YUFDN0I7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FDRixDQUFDO0lBQ0YsT0FBTyxpQkFBaUIsQ0FBQyxFQUFFLGVBQWUsRUFBRSxDQUFDLENBQUM7QUFDaEQsQ0FBQztBQXpCRCx3REF5QkM7QUFFRCxTQUFnQixpQkFBaUIsQ0FDL0IsUUFBYTtJQUViLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxlQUFlLENBQUM7SUFDeEMsSUFBSSxNQUFNLEVBQUU7UUFDVixNQUFNLEVBQ0osZUFBZSxFQUFFLFlBQVksRUFDN0IsS0FBSyxFQUFFLGFBQWEsR0FDckIsR0FBRyxNQUFNLENBQUM7UUFDWCxJQUFJLFlBQVksRUFBRTtZQUNoQixRQUFRLENBQUMsZUFBZSxHQUFHLFlBQVksQ0FBQztTQUN6QztRQUNELElBQUksYUFBYSxFQUFFO1lBQ2pCLFFBQVEsQ0FBQyxLQUFLLEdBQUcsYUFBYSxDQUFDO1NBQ2hDO0tBQ0Y7SUFDRCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDO0FBakJELDhDQWlCQyJ9